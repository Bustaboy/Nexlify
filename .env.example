# .env.example
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# NEXLIFY DEVELOPER CONFIGURATION - LOCAL DEVELOPMENT ONLY
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
# 🚨 IMPORTANT: This file is for DEVELOPERS ONLY!
# End users configure everything through the Tauri GUI application.
# 
# Instructions:
# 1. Copy this file to .env: cp .env.example .env
# 2. Default values work out-of-the-box for development
# 3. Only modify if you need specific test scenarios
#
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ CORE CONFIGURATION                                                      │
# └─────────────────────────────────────────────────────────────────────────┘

# Environment: development | staging | production
# development = Hot reload, verbose logging, mock exchanges
NEXLIFY_ENV=development

# Python version for builds
PYTHON_VERSION=3.12

# Build environment
BUILD_ENV=development

# Logging level: DEBUG | INFO | WARNING | ERROR | CRITICAL
LOG_LEVEL=INFO

# Enable hot reload for Python files
ENABLE_HOT_RELOAD=true

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ SERVICE PORTS - Change if you have conflicts                           │
# └─────────────────────────────────────────────────────────────────────────┘

# Nexlify Core API
NEXLIFY_API_PORT=8888
NEXLIFY_WS_PORT=8889

# Redis Cache
REDIS_PORT=6379

# QuestDB Time Series
QDB_HTTP_PORT=9000
QDB_PG_PORT=8812
QDB_ILP_PORT=9009

# Monitoring Stack
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
VECTOR_API_PORT=8686

# ML Services
TIMESFM_PORT=8001
ENSEMBLE_PORT=8002

# Development Tools
DOCS_PORT=8080

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ EXCHANGE CONFIGURATION - Mock keys for development                     │
# └─────────────────────────────────────────────────────────────────────────┘

# Coinbase (mock keys work with test mode)
COINBASE_API_KEY=dev_cb_1234567890abcdef
COINBASE_API_SECRET=dev_cb_secret_1234567890abcdef
COINBASE_USE_SANDBOX=true

# Binance (mock keys work with test mode)
BINANCE_API_KEY=dev_bn_1234567890abcdef
BINANCE_API_SECRET=dev_bn_secret_1234567890abcdef
BINANCE_TESTNET=true

# Mock exchange mode - uses simulated data instead of real APIs
USE_MOCK_EXCHANGES=true
MOCK_STARTING_BALANCE=10000.0
MOCK_LATENCY_MS=50

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ SECURITY CONFIGURATION - Development defaults                          │
# └─────────────────────────────────────────────────────────────────────────┘

# MPC Wallet Configuration (mock for development)
MPC_WALLET_CONFIG={"provider":"mock","threshold":2,"parties":3}

# Fireblocks (optional - leave empty for mock mode)
FIREBLOCKS_API_KEY=
FIREBLOCKS_API_SECRET=
FIREBLOCKS_BASE_URL=https://sandbox-api.fireblocks.io

# Hardware Security Module
HSM_ENABLED=false
HSM_PIN=

# Development security (less strict for local dev)
ENABLE_CORS=true
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,tauri://localhost
JWT_SECRET=dev_jwt_secret_change_in_production_1234567890
SESSION_TIMEOUT=86400  # 24 hours for dev

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ DATABASE & CACHING                                                      │
# └─────────────────────────────────────────────────────────────────────────┘

# Redis Configuration
REDIS_PASSWORD=nexlify2025
REDIS_MAXMEMORY=1gb
REDIS_MAXMEMORY_POLICY=allkeys-lru

# QuestDB Configuration
QDB_LOG_LEVEL=INFO
QDB_WORKERS=4
QDB_MEMORY=4g
QDB_MEMORY_LIMIT=4G

# Data retention policies
PROMETHEUS_RETENTION=30d
PROMETHEUS_RETENTION_SIZE=10GB

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ PERFORMANCE & RESOURCE LIMITS                                          │
# └─────────────────────────────────────────────────────────────────────────┘

# CPU/Memory limits for containers
NEXLIFY_CPU_LIMIT=2
NEXLIFY_MEMORY_LIMIT=2G
NEXLIFY_CPU_RESERVE=1
NEXLIFY_MEMORY_RESERVE=1G

# QuestDB Resources
QDB_CPU_LIMIT=2
QDB_MEMORY_LIMIT=4G

# ML Service Resources
ML_CPU_LIMIT=4
ML_MEMORY_LIMIT=8G
ML_BATCH_SIZE=32

# Worker processes
MAX_WORKERS=4
UVLOOP_ENABLED=true

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ GPU CONFIGURATION - Optional for ML acceleration                       │
# └─────────────────────────────────────────────────────────────────────────┘

# Enable GPU support (requires nvidia-docker)
ENABLE_GPU=false

# CUDA configuration
CUDA_VERSION=12.1
CUDA_VISIBLE_DEVICES=0
GPU_COUNT=1

# ML optimization
USE_MIXED_PRECISION=true
TF_FORCE_GPU_ALLOW_GROWTH=true
TF_CPP_MIN_LOG_LEVEL=2

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ MONITORING & OBSERVABILITY                                             │
# └─────────────────────────────────────────────────────────────────────────┘

# Grafana admin credentials (development only)
GRAFANA_PASSWORD=nexlify2025

# Vector log aggregation
VECTOR_LOG_LEVEL=info

# Metrics collection interval
METRICS_INTERVAL=15s

# Enable detailed performance profiling
ENABLE_PROFILING=true
PROFILING_PORT=6060

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ ML MODEL CONFIGURATION                                                  │
# └─────────────────────────────────────────────────────────────────────────┘

# TimesFM model settings
TIMESFM_HORIZON=96
TIMESFM_CONTEXT_LENGTH=512

# Model ensemble weights (must sum to 1.0)
ENSEMBLE_WEIGHTS=0.4,0.3,0.3

# Model paths (local development)
MODEL_CACHE_DIR=./models

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ DEVELOPMENT FEATURES                                                    │
# └─────────────────────────────────────────────────────────────────────────┘

# Mock data generation
GENERATE_MOCK_DATA=true
MOCK_DATA_SYMBOLS=BTC/USDT,ETH/USDT,SOL/USDT
MOCK_DATA_INTERVAL=5s

# Debug features
DEBUG_MODE=true
SHOW_SQL_QUERIES=false
ENABLE_QUERY_EXPLAIN=false

# Testing features
ENABLE_TEST_ENDPOINTS=true
TEST_USER_EMAIL=dev@nexlify.local
TEST_USER_PASSWORD=dev123

# Development helpers
AUTO_CREATE_TABLES=true
SEED_DEMO_DATA=true
PRETTY_PRINT_LOGS=true

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ EXTERNAL SERVICES - Optional integrations                              │
# └─────────────────────────────────────────────────────────────────────────┘

# OpenAI (for AI features - optional)
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4-turbo-preview

# Slack notifications (optional)
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#nexlify-dev

# Discord notifications (optional)  
DISCORD_WEBHOOK_URL=

# Email configuration (optional)
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_USER=
SMTP_PASSWORD=
EMAIL_FROM=noreply@nexlify.local

# ┌─────────────────────────────────────────────────────────────────────────┐
# │ NOTES FOR DEVELOPERS                                                    │
# └─────────────────────────────────────────────────────────────────────────┘
#
# 1. Default values are optimized for local development
# 2. Mock exchanges are enabled - no real trades will execute
# 3. All services will start with minimal resources
# 4. GPU is disabled by default - enable only if you have nvidia-docker
# 5. Monitoring stack is optional - use --profile monitoring
# 6. Hot reload is enabled for rapid development
#
# Common Commands:
# ---------------
# Start core only:     docker compose --profile core up
# Start everything:    docker compose --profile full up
# Start with GPU:      docker compose --profile gpu up
# View logs:           docker compose logs -f nexlify-core
# Rebuild:             docker compose build --no-cache
# Clean everything:    docker compose down -v
#
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
